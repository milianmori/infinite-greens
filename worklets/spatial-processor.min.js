var P=(y,s)=>()=>(s||y((s={exports:{}}).exports,s),s.exports);var S=P(()=>{var f=class extends AudioWorkletProcessor{constructor(){super(),this.noiseDelays=[101,127];let s=o=>({buf:new Float32Array(o),idx:0,len:o});this.noiseBufs=this.noiseDelays.map(o=>s(o)),this.meterAccum=new Float64Array(7),this.meterCount=0,this.port.onmessage=o=>{let e=o.data||{};e&&e.resetMeters&&(this.meterAccum.fill(0),this.meterCount=0)}}static get parameterDescriptors(){return[]}process(s,o){let e=o[0];if(!e||e.length<7)return!0;let i=s[0]||[],w=s[1]||[],F=w[0]||new Float32Array(128),p=w[1]||new Float32Array(128),g=e[0],b=e[1],B=e[2],D=e[3],k=e[4],v=e[5],N=e[6],c=g.length;for(let t=0;t<c;t+=1){let r=(i[0]||new Float32Array(c))[t]||0,a=(i[1]||new Float32Array(c))[t]||0,l=(i[2]||new Float32Array(c))[t]||0,A=(i[3]||new Float32Array(c))[t]||0,d=(i[4]||new Float32Array(c))[t]||0,R=(F[t]+p[t])*.5,q=(F[t]-p[t])*.5,h=0,u=0;for(let m=0;m<2;m+=1){let n=this.noiseBufs[m],x=.7+.2*m,I=1-x,L=x*R+I*q;n.buf[n.idx]=L;let C=(n.idx+1)%n.len,M=n.buf[C];n.idx=C,m===0?h=M:u=M}g[t]=r,b[t]=a,B[t]=l,D[t]=A,k[t]=d,v[t]=h,N[t]=u,this.meterAccum[0]+=r*r,this.meterAccum[1]+=a*a,this.meterAccum[2]+=l*l,this.meterAccum[3]+=A*A,this.meterAccum[4]+=d*d,this.meterAccum[5]+=h*h,this.meterAccum[6]+=u*u}if(this.meterCount+=c,this.meterCount>0){let t=new Float32Array(7);for(let r=0;r<7;r+=1){let a=Math.sqrt(this.meterAccum[r]/this.meterCount)||0;t[r]=a,this.meterAccum[r]=0}this.meterCount=0,this.port.postMessage({type:"meters",rms:t})}return!0}};registerProcessor("spatial-processor",f)});export default S();
